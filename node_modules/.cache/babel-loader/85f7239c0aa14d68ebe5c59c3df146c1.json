{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/devorii/Desktop/sms_beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useReducer,useEffect}from'react';import{ContactReducer}from'../Reducers/ContactsReducer';export var ContactContext=/*#__PURE__*/createContext();var ContactsProvider=function ContactsProvider(props){var initState=[];var _useReducer=useReducer(ContactReducer,initState,function(){var localStorageContacts=localStorage.getItem('contacts');return localStorageContacts?JSON.parse(localStorageContacts):[];}),_useReducer2=_slicedToArray(_useReducer,2),contacts=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){// set contacts into local storage\nlocalStorage.setItem('contacts',JSON.stringify(contacts));},[contacts,dispatch]);return/*#__PURE__*/_jsx(ContactContext.Provider,{value:{contacts:contacts,dispatch:dispatch},children:props.children});};export default ContactsProvider;","map":{"version":3,"sources":["/Users/devorii/Desktop/sms_beta/src/context/ContactsCtxt.js"],"names":["React","createContext","useReducer","useEffect","ContactReducer","ContactContext","ContactsProvider","props","initState","localStorageContacts","localStorage","getItem","JSON","parse","contacts","dispatch","setItem","stringify","children"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,SAA3C,KAA2D,OAA3D,CACA,OAASC,cAAT,KAA+B,6BAA/B,CAGA,MAAO,IAAMC,CAAAA,cAAc,cAAGJ,aAAa,EAApC,CAEP,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAU,CAC/B,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAD+B,gBAEFN,UAAU,CAACE,cAAD,CAAiBI,SAAjB,CAA4B,UAAI,CACpE,GAAMC,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA7B,CACA,MAAOF,CAAAA,oBAAoB,CAAGG,IAAI,CAACC,KAAL,CAAWJ,oBAAX,CAAH,CAAsC,EAAjE,CACF,CAHsC,CAFR,4CAExBK,QAFwB,iBAEdC,QAFc,iBAO/BZ,SAAS,CAAC,UAAI,CACV;AACAO,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAiCJ,IAAI,CAACK,SAAL,CAAeH,QAAf,CAAjC,EACH,CAHQ,CAGN,CAACA,QAAD,CAAWC,QAAX,CAHM,CAAT,CAKA,mBACI,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAACD,QAAQ,CAARA,QAAD,CAAWC,QAAQ,CAARA,QAAX,CAAhC,UACKR,KAAK,CAACW,QADX,EADJ,CAKH,CAjBD,CAkBA,cAAeZ,CAAAA,gBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect} from 'react'\nimport { ContactReducer } from '../Reducers/ContactsReducer'\n\n\nexport const ContactContext = createContext()\n\nconst ContactsProvider = (props) =>{\n    const initState = []\n    const [contacts, dispatch] = useReducer(ContactReducer, initState, ()=>{\n       const localStorageContacts = localStorage.getItem('contacts')\n       return localStorageContacts ? JSON.parse(localStorageContacts) : []\n    });\n\n    useEffect(()=>{\n        // set contacts into local storage\n        localStorage.setItem('contacts', JSON.stringify(contacts))\n    }, [contacts, dispatch])\n\n    return (\n        <ContactContext.Provider value={{contacts, dispatch}}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\nexport default ContactsProvider;"]},"metadata":{},"sourceType":"module"}