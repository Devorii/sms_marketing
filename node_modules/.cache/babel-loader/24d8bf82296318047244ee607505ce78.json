{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/devorii/Desktop/smsmarket/oriisms/src/context/ContactsCtxt.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { ContactReducer } from '../Reducers/ContactsReducer';\nexport const ContactContext = /*#__PURE__*/createContext();\n\nconst ContactsProvider = props => {\n  _s();\n\n  const initState = [];\n  const [contacts, dispatch] = useReducer(ContactReducer, initState, () => {});\n  useEffect(() => {// set contacts into local storage\n  }, [contacts, dispatch]);\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactsProvider, \"S1UC1Ev09TQPhcq2KbbOiTKPd+U=\");\n\n_c = ContactsProvider;\nexport default ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"sources":["/Users/devorii/Desktop/smsmarket/oriisms/src/context/ContactsCtxt.js"],"names":["React","createContext","useReducer","useEffect","ContactReducer","ContactContext","ContactsProvider","props","initState","contacts","dispatch","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA2D,OAA3D;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAGA,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;;AAEP,MAAMK,gBAAgB,GAAIC,KAAD,IAAU;AAAA;;AAC/B,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBR,UAAU,CAACE,cAAD,EAAiBI,SAAjB,EAA4B,MAAI,CAEtE,CAFsC,CAAvC;AAIAL,EAAAA,SAAS,CAAC,MAAI,CACV;AACH,GAFQ,EAEN,CAACM,QAAD,EAAWC,QAAX,CAFM,CAAT;AAIA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAhC;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAML,gB;;KAAAA,gB;AAgBN,eAAeA,gBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect} from 'react'\nimport { ContactReducer } from '../Reducers/ContactsReducer'\n\n\nexport const ContactContext = createContext()\n\nconst ContactsProvider = (props) =>{\n    const initState = []\n    const [contacts, dispatch] = useReducer(ContactReducer, initState, ()=>{\n\n    });\n\n    useEffect(()=>{\n        // set contacts into local storage\n    }, [contacts, dispatch])\n\n    return (\n        <ContactContext.Provider value={{contacts, dispatch}}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\nexport default ContactsProvider;"]},"metadata":{},"sourceType":"module"}